// Code generated by ent, DO NOT EDIT.

package telegramblob

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the telegramblob type in the database.
	Label = "telegram_blob"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSize holds the string denoting the size field in the database.
	FieldSize = "size"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldURI holds the string denoting the uri field in the database.
	FieldURI = "uri"
	// FieldSha256 holds the string denoting the sha256 field in the database.
	FieldSha256 = "sha256"
	// FieldFileReference holds the string denoting the file_reference field in the database.
	FieldFileReference = "file_reference"
	// FieldFileID holds the string denoting the file_id field in the database.
	FieldFileID = "file_id"
	// FieldAccessHash holds the string denoting the access_hash field in the database.
	FieldAccessHash = "access_hash"
	// Table holds the table name of the telegramblob in the database.
	Table = "telegram_blobs"
)

// Columns holds all SQL columns for telegramblob fields.
var Columns = []string{
	FieldID,
	FieldSize,
	FieldPath,
	FieldURI,
	FieldSha256,
	FieldFileReference,
	FieldFileID,
	FieldAccessHash,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the TelegramBlob queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// BySize orders the results by the size field.
func BySize(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSize, opts...).ToFunc()
}

// ByPath orders the results by the path field.
func ByPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPath, opts...).ToFunc()
}

// ByURI orders the results by the uri field.
func ByURI(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldURI, opts...).ToFunc()
}

// BySha256 orders the results by the sha256 field.
func BySha256(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSha256, opts...).ToFunc()
}

// ByFileID orders the results by the file_id field.
func ByFileID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFileID, opts...).ToFunc()
}

// ByAccessHash orders the results by the access_hash field.
func ByAccessHash(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccessHash, opts...).ToFunc()
}
