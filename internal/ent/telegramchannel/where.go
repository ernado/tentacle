// Code generated by ent, DO NOT EDIT.

package telegramchannel

import (
	"entgo.io/ent/dialect/sql"
	"github.com/ernado/tentacle/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldLTE(FieldID, id))
}

// AccessHash applies equality check predicate on the "access_hash" field. It's identical to AccessHashEQ.
func AccessHash(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldAccessHash, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldTitle, v))
}

// SaveRecords applies equality check predicate on the "save_records" field. It's identical to SaveRecordsEQ.
func SaveRecords(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldSaveRecords, v))
}

// SaveFavoriteRecords applies equality check predicate on the "save_favorite_records" field. It's identical to SaveFavoriteRecordsEQ.
func SaveFavoriteRecords(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldSaveFavoriteRecords, v))
}

// Active applies equality check predicate on the "active" field. It's identical to ActiveEQ.
func Active(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldActive, v))
}

// AccessHashEQ applies the EQ predicate on the "access_hash" field.
func AccessHashEQ(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldAccessHash, v))
}

// AccessHashNEQ applies the NEQ predicate on the "access_hash" field.
func AccessHashNEQ(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNEQ(FieldAccessHash, v))
}

// AccessHashIn applies the In predicate on the "access_hash" field.
func AccessHashIn(vs ...int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldIn(FieldAccessHash, vs...))
}

// AccessHashNotIn applies the NotIn predicate on the "access_hash" field.
func AccessHashNotIn(vs ...int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNotIn(FieldAccessHash, vs...))
}

// AccessHashGT applies the GT predicate on the "access_hash" field.
func AccessHashGT(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldGT(FieldAccessHash, v))
}

// AccessHashGTE applies the GTE predicate on the "access_hash" field.
func AccessHashGTE(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldGTE(FieldAccessHash, v))
}

// AccessHashLT applies the LT predicate on the "access_hash" field.
func AccessHashLT(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldLT(FieldAccessHash, v))
}

// AccessHashLTE applies the LTE predicate on the "access_hash" field.
func AccessHashLTE(v int64) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldLTE(FieldAccessHash, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldContainsFold(FieldTitle, v))
}

// SaveRecordsEQ applies the EQ predicate on the "save_records" field.
func SaveRecordsEQ(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldSaveRecords, v))
}

// SaveRecordsNEQ applies the NEQ predicate on the "save_records" field.
func SaveRecordsNEQ(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNEQ(FieldSaveRecords, v))
}

// SaveRecordsIsNil applies the IsNil predicate on the "save_records" field.
func SaveRecordsIsNil() predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldIsNull(FieldSaveRecords))
}

// SaveRecordsNotNil applies the NotNil predicate on the "save_records" field.
func SaveRecordsNotNil() predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNotNull(FieldSaveRecords))
}

// SaveFavoriteRecordsEQ applies the EQ predicate on the "save_favorite_records" field.
func SaveFavoriteRecordsEQ(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldSaveFavoriteRecords, v))
}

// SaveFavoriteRecordsNEQ applies the NEQ predicate on the "save_favorite_records" field.
func SaveFavoriteRecordsNEQ(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNEQ(FieldSaveFavoriteRecords, v))
}

// SaveFavoriteRecordsIsNil applies the IsNil predicate on the "save_favorite_records" field.
func SaveFavoriteRecordsIsNil() predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldIsNull(FieldSaveFavoriteRecords))
}

// SaveFavoriteRecordsNotNil applies the NotNil predicate on the "save_favorite_records" field.
func SaveFavoriteRecordsNotNil() predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNotNull(FieldSaveFavoriteRecords))
}

// ActiveEQ applies the EQ predicate on the "active" field.
func ActiveEQ(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldEQ(FieldActive, v))
}

// ActiveNEQ applies the NEQ predicate on the "active" field.
func ActiveNEQ(v bool) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.FieldNEQ(FieldActive, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TelegramChannel) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TelegramChannel) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TelegramChannel) predicate.TelegramChannel {
	return predicate.TelegramChannel(sql.NotPredicates(p))
}
